{
  "resourceType": "StructureDefinition",
  "id": "elementdefinition-de-dataelement",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-de-dataelement",
  "name": "DataElement constraint on ElementDefinition data type",
  "publisher": "Health Level Seven, Inc. - FHIR Core WG",
  "contact": [
    {
      "telecom": [
        {
          "system": "url",
          "value": "http://hl7.org/special/committees/FHIR"
        }
      ]
    }
  ],
  "description": "Identifies how the ElementDefinition data type is used when it appears within a data element",
  "status": "draft",
  "date": "2015-02-28",
  "type": "constraint",
  "abstract": false,
  "base": "http://hl7.org/fhir/StructureDefinition/ElementDefinition",
  "snapshot": {
    "element": [
      {
        "path": "ElementDefinition",
        "name": "dataelement",
        "short": "Definition of an elements in a resource or extension",
        "definition": "Captures constraints on each element within the resource, profile, or extension.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "ElementDefinition"
          }
        ],
        "constraint": [
          {
            "key": "eld-13",
            "severity": "error",
            "human": "Types must be unique by the combination of code and profile",
            "xpath": "not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))"
          },
          {
            "key": "eld-14",
            "severity": "error",
            "human": "Constraints must be unique by key",
            "xpath": "count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))"
          },
          {
            "key": "eld-11",
            "severity": "error",
            "human": "Binding can only be present for coded elements, string, and uri",
            "xpath": "not(exists(f:binding)) or (count(f:type/f:code) = 0) or  f:type/f:code/@value=('code','Coding','CodeableConcept','Quantity','Extension', 'string', 'uri')"
          },
          {
            "key": "eld-8",
            "severity": "error",
            "human": "Pattern and value are mutually exclusive",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or not(exists(f:*[starts-with(local-name(.), 'value')]))"
          },
          {
            "key": "eld-15",
            "severity": "error",
            "human": "Constraint names must be unique.",
            "xpath": "count(f:constraint[f:name]) = count(distinct-values(f:constraint/f:name/@value))"
          },
          {
            "key": "eld-16",
            "severity": "error",
            "human": "default value and meaningWhenMissing are mutually exclusive",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or not(exists(f:meaningWhenMissing))"
          },
          {
            "key": "eld-2",
            "severity": "error",
            "human": "Min <= Max",
            "xpath": "(not(f:max/@value) and not(f:min/@value)) or (f:max/@value = '*') or (f:max/@value >= f:min/@value)"
          },
          {
            "key": "eld-7",
            "severity": "error",
            "human": "Pattern may only be specified if there is one type",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or (count(f:type)=1 )"
          },
          {
            "key": "eld-6",
            "severity": "error",
            "human": "Fixed value may only be specified if there is one type",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or (count(f:type)=1 )"
          },
          {
            "key": "eld-5",
            "severity": "error",
            "human": "Either a namereference or a fixed value (but not both) is permitted",
            "xpath": "not(exists(f:nameReference) and exists(f:*[starts-with(local-name(.), 'value')]))"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "RetrieveMetadata response"
          },
          {
            "identity": "v2",
            "map": "OM1"
          },
          {
            "identity": "rim",
            "map": "Observation[classCode=OBS, moodCode=DEFN]"
          }
        ]
      },
      {
        "path": "ElementDefinition.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "Question",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "AllowedUnits",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
          }
        ]
      },
      {
        "path": "ElementDefinition.path",
        "short": "The path of the element (see the Detailed Descriptions)",
        "definition": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.representation",
        "short": "How this element is represented in instances",
        "definition": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
        "comments": "This is rarely used except for special cases where the representation deviates from the normal, which is done only very reluctantly, and can only be done in the base standard (and profiles must reproduce what the base standard does).",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "PropertyRepresentation",
          "strength": "required",
          "description": "How a property is represented on the wire",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/property-representation"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.name",
        "short": "Name for this particular element definition (reference target)",
        "definition": "The name of this element definition (to refer to it from other element definitions using ElementDefinition.nameReference). This is a unique name referring to a specific set of constraints applied to this element. One use of this is to provide a name to different slices of the same element.",
        "comments": "The name SHALL be unique within the structure within the context of the constrained resource element.  (Though to avoid confusion, uniqueness across all elements is recommended.).",
        "requirements": "Allows referencing a defined element.  May also be used for code generation purposes.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.label",
        "short": "Name for element to display with or prompt for element",
        "definition": "The text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.",
        "comments": "Question and label serve similar purposes in they both can be used to prompt for capturing a data element.  Whether the question form or label form should be used will depend on the type of instrument being used to capture the information.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "./code/display"
          }
        ]
      },
      {
        "path": "ElementDefinition.code",
        "short": "Defining code",
        "definition": "A code that provides the meaning for the element according to a particular terminology.",
        "comments": "The data element definition and other constraints SHALL be a proper constraint on the meaning (as defined in the code system, including relationships) of any code listed here.\n\nWhere multiple codes exist in a terminology that could correspond to the data element, the most granular code(s) should be selected, so long as they are not more restrictive than the data element itself.",
        "requirements": "Links the meaning of an element to an external terminology.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.7"
          },
          {
            "identity": "rim",
            "map": "./code (root or translation)"
          },
          {
            "identity": "loincstruc",
            "map": "LOINC_NUM"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing",
        "short": "This element is sliced - slices follow",
        "definition": "Indicates that the element is sliced into a set of alternative definitions (there are multiple definitions on a single element in the base resource). The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
        "min": 0,
        "max": "0",
        "constraint": [
          {
            "key": "eld-1",
            "severity": "error",
            "human": "If there are no discriminators, there must be a definition",
            "xpath": "(f:discriminator) or (f:definition)"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.discriminator",
        "short": "Element values that used to distinguish the slices",
        "definition": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
        "comments": "If there is no discriminator, the content is hard to process, so this should be avoided.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.description",
        "short": "Text description of how slicing works (or not)",
        "definition": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.",
        "comments": "If it's really not possible to differentiate them, the design should be re-evaluated to make te content usable.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.ordered",
        "short": "If elements must be in same order as slices",
        "definition": "If the matching elements have to occur in the same order as defined in the profile.",
        "comments": "Order should only be required when it is a pressing concern for presentation. Profile authors should consider making the order a feature of the rules about the narrative, not the rules about the data - requiring ordered data makes the profile much less re-usable.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.rules",
        "short": "closed | open | openAtEnd",
        "definition": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
        "comments": "Allowing additional elements makes for a much for flexible template - it's open for use in wider contexts, but also means that the content of the resource is not closed, and applications have to decide how to handle content not described by the profile.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "SlicingRules",
          "strength": "required",
          "description": "How slices are interpreted when evaluating an instance",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/resource-slicing-rules"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.short",
        "short": "Concise definition for xml presentation",
        "definition": "A concise definition that  is shown in the generated XML format that summarizes profiles (used throughout the specification).",
        "comments": "May change the term to provide language more appropriate to the context of the profile or to reflect slicing.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.definition",
        "short": "Full formal definition as narrative text",
        "definition": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource.",
        "comments": "It is easy for a different definition to change the meaning of an element and this can have nasty downstream consequences. Please be careful when providing definitions.",
        "requirements": "To allow a user to state the usage of an element in a particular context.",
        "alias": [
          "Description"
        ],
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.6, OM1.41"
          },
          {
            "identity": "rim",
            "map": "./text"
          },
          {
            "identity": "loincstruc",
            "map": "TERM DEFINITION/DESCRIPTION(S)"
          }
        ]
      },
      {
        "path": "ElementDefinition.comments",
        "short": "Comments about the use of this element",
        "definition": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.",
        "comments": "If it is possible to capture usage rules using invariants, that mechanism should be used in preference to this element.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "NTE, OM.32, OM1.33, OM1.39"
          },
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=LIST, moodCode=EVN]/code"
          },
          {
            "identity": "loincstruc",
            "map": "COMMENTS"
          }
        ]
      },
      {
        "path": "ElementDefinition.requirements",
        "short": "Why is this needed?",
        "definition": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.",
        "comments": "This element does not describe the usage of the element (that's done in comments), rather it's for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=META]/source[classCode=ACT, moodCode=EVN, isCriterionInd=true]/reasonCode/originalText"
          },
          {
            "identity": "loincstruc",
            "map": "R/O/C"
          }
        ]
      },
      {
        "path": "ElementDefinition.alias",
        "short": "Other names",
        "definition": "Identifies additional names by which this element might also be known.",
        "requirements": "Allows for better easier recognition of the element by multiple communities, including international communities.",
        "alias": [
          "synonym",
          "other name"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.8, OM1.52"
          },
          {
            "identity": "rim",
            "map": "Not currently expressible"
          },
          {
            "identity": "loincstruc",
            "map": "RELATED NAMES (only some of these apply)"
          }
        ]
      },
      {
        "path": "ElementDefinition.min",
        "short": "Minimum Cardinality",
        "definition": "The minimum number of times this element SHALL appear in the instance.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "integer"
          }
        ],
        "condition": [
          "eld-2"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.max",
        "short": "Maximum Cardinality (a number or *)",
        "definition": "The maximum number of times this element is permitted to appear in the instance.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-3",
          "eld-2"
        ],
        "constraint": [
          {
            "key": "eld-3",
            "severity": "error",
            "human": "Max SHALL be a number or \"*\"",
            "xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type",
        "short": "Data type and Profile for this element",
        "definition": "The data type or resource that the value of this element is permitted to be.",
        "comments": "The Type of the element can be left blank, in which case the type is inherited from the resource. The type can only be listed in this field if it is an allowed option in the base resource.",
        "min": 0,
        "max": "*",
        "condition": [
          "eld-13"
        ],
        "constraint": [
          {
            "key": "eld-4",
            "severity": "error",
            "human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
            "xpath": "not(exists(f:aggregation)) or exists(f:code[@value = 'Reference'])"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.dataType"
          },
          {
            "identity": "v2",
            "map": "OM1.3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.code",
        "short": "Name of Data type or Resource",
        "definition": "Name of Data type or Resource that is a(or the) type used for this element.",
        "comments": "If the element is a reference to another resource, this element contains \"Reference\", and the profile element refers to the profile of the allowed target of the resource, which may be a reference to the general definition of a resource (e.g. http://hl7.org/fhir/StructureDefinition/Patient). There would be one pair of type/code for each allowed target resource type.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "DataType",
          "strength": "required",
          "description": "The type of an element - one of the FHIR data types",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/data-types"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.profile",
        "short": "Profile.structure to apply",
        "definition": "Identifies a profile structure that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile.",
        "comments": "The reference might be a simple name in the form #[name], which is a reference to another named constraint in a resource - where the resource contains more than one constraint, or a URL which is a reference to a resource Profile, with a terminal #[name] which identifies a specific structure entry in the profile.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "uri"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.aggregation",
        "short": "contained | referenced | bundled - how aggregated",
        "definition": "If the type is a reference to another resource, how the resource is or can be aggreated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "code"
          }
        ],
        "condition": [
          "eld-4"
        ],
        "binding": {
          "name": "AggregationMode",
          "strength": "required",
          "description": "How resource references can be aggregated",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/resource-aggregation-mode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.nameReference",
        "short": "To another element constraint (by element.name)",
        "definition": "Identifies the name of a slice defined elsewhere in the profile whose constraints should be applied to the current element.",
        "comments": "If child components of this element are defined, they act as constraints on the referenced slice.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-5"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.defaultValue[x]",
        "short": "Specified value it missing from instance",
        "definition": "The value that should be used if there is no value stated in the instance.",
        "comments": "Default values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed. For these reasons, default values are (and should be) used extremely sparingly.\r\n\n\nThis element should only be used on child elements of complex data elements.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-16"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.meaningWhenMissing",
        "short": "Implicit meaning when this element is missing",
        "definition": "The Implicit meaning that is to be understood when this element is missing.",
        "comments": "Implicit meanings for missing values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. An implicit meaning for a missing value can never be changed, and specifying one has the consequence that constraining its use in profiles eliminates use cases as possibilities, not merely moving them out of scope.\r\n\n\nThis element should only be used on child elements of complex data elements.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-16"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.fixed[x]",
        "short": "Value must be exactly this",
        "definition": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-signficant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
        "comments": "This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-5",
          "eld-6",
          "eld-8"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.pattern[x]",
        "short": "Value must have at least these property values",
        "definition": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-senstive, accent-sensitive, etc.).",
        "comments": "Mostly used for fixing values of CodeableConcept.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-5",
          "eld-7",
          "eld-8"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.example[x]",
        "short": "Example value: [as defined for type]",
        "definition": "A sample value for this element demonstrating the type of information that would typically be captured.",
        "comments": "This will most commonly be present for data where it's not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)\n\nIf the example value are fully populated, the publication tool can generate an instance automatically.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "*"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "EXMPL_ANSWERS"
          }
        ]
      },
      {
        "path": "ElementDefinition.maxLength",
        "short": "Max length for strings",
        "definition": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.",
        "comments": "Receivers are not required to reject instances that exceed the maximum length.  The full length could be stored.  In some cases, data might be truncated, though truncation should be undertaken with care and an understanding of the consequences of doing so. If not specified, there is no conformance expectation for length support.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "integer"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.condition",
        "short": "Reference to invariant about presence",
        "definition": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "id"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint",
        "short": "Condition that must evaluate to true",
        "definition": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
        "comments": "Constraints should be declared on the \"context\" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint.",
        "min": 0,
        "max": "*"
      },
      {
        "path": "ElementDefinition.constraint.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.key",
        "short": "Target of 'condition' reference above",
        "definition": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "condition": [
          "eld-14"
        ]
      },
      {
        "path": "ElementDefinition.constraint.name",
        "short": "Short human label",
        "definition": "Used to label the constraint in OCL or in short displays incapable of displaying the full human description.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-15"
        ]
      },
      {
        "path": "ElementDefinition.constraint.severity",
        "short": "error | warning",
        "definition": "Identifies the impact constraint violation has on the conformance of the instance.",
        "comments": "This allows constraints to be asserted as \"shall\" (error) and \"should\" (warning).",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "ConstraintSeverity",
          "strength": "required",
          "description": "SHALL applications comply with this constraint?",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/constraint-severity"
          }
        }
      },
      {
        "path": "ElementDefinition.constraint.human",
        "short": "Human description of constraint",
        "definition": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
        "comments": "Should be expressed in business terms as much as possible.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.xpath",
        "short": "XPath expression of constraint",
        "definition": "An XPath expression of constraint that can be executed to see if this constraint is met.",
        "comments": "Elements SHALL use \"f\" as the namespace prefix for the FHIR namespace, and \"x\" for the xhtml namespace, and SHALL not use any other prefixes.",
        "requirements": "Used in Schematron tests of the validity of the resource.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "ElementDefinition.mustSupport",
        "short": "If the element must supported",
        "definition": "If true, conformant resource authors SHALL be capable of providing a value for the element and resource consumers SHALL be capable of extracting and doing something useful with the data element.  If false, the element may be ignored and not supported.",
        "comments": "\"Something useful\" is context dependent. This flag is never set to true by the FHIR specification itself - it is only set to true in profiles, and when the profile sets it true, it SHALL describe what it means for applications to support the element. In general, the question is what would a reasonable observer expect of a system that explicitly claims to \"support\" this element?",
        "requirements": "Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.isModifier",
        "short": "If this modifies the meaning of other elements",
        "definition": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
        "comments": "Only the definition of an element can set IsModifier true - either the specification itself or where an extension is originally defined. Once set to false, it cannot be set to true in derived profiles. An element/extension that has isModifier=true SHOULD also have a minimum cardinality of 1, so that there is no lack of clarity about what to do if it is missing. If it can be missing, the definition SHALL make the meaning of a missing element clear.",
        "requirements": "Allows elements to be introduced into a specification that can't safely be ignored by applications that don't recognize them.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.isSummary",
        "short": "Include when _summary = true?",
        "definition": "Whether the element should be included if a client requests a search with the parameter _summary=true.",
        "comments": "Some resources include a set of simple metadata, and some very large data. This element is used to reduce the quantity of data returned in searches. Note that servers may pre-cache summarised resources for optimal performance, so servers may not support per-profile use of the isSummary flag.",
        "requirements": "Allow clients to search through large resources quickly.",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.binding",
        "short": "ValueSet details if this is coded",
        "definition": "Binds to a value set if this element is coded (code, Coding, CodeableConcept).",
        "min": 0,
        "max": "1",
        "condition": [
          "eld-11"
        ],
        "constraint": [
          {
            "key": "eld-9",
            "severity": "error",
            "human": "Example value sets are always extensible",
            "xpath": "not(f:conformance/@value='example' and f:isExtensible/@value='false')"
          },
          {
            "key": "eld-10",
            "severity": "error",
            "human": "provide either a reference or a description (or both)",
            "xpath": "(exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "ANSWER LIST, NORMATIVE ANSWER LIST"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.name",
        "short": "Descriptive Name",
        "definition": "A descriptive name for this - can be useful for generating implementation artifacts.",
        "comments": "SHALL be unique within the profile.  If the same name as an imported profile, will override the imported binding (and SHALL be a proper constraint on the imported binding).",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.strength",
        "short": "required | extensible | preferred | example",
        "definition": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
        "comments": "For further discussion, see [[[Using Terminologies]]].",
        "alias": [
          "conformance",
          "extensibility"
        ],
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "BindingStrength",
          "strength": "required",
          "description": "Indication of the degree of conformance expectations associated with a binding",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/vs/binding-strength"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.description",
        "short": "Human explanation of the value set",
        "definition": "Describes the intended use of this particular set of codes.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-10"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.valueSet[x]",
        "short": "Source of value set",
        "definition": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.",
        "comments": "For value sets,the referenceResource, the display can contain the value set description.  The reference may be version-specific or not.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "uri"
          },
          {
            "code": "Reference",
            "profile": "http://hl7.org/fhir/StructureDefinition/ValueSet"
          }
        ],
        "condition": [
          "eld-10",
          "eld-12"
        ],
        "constraint": [
          {
            "key": "eld-12",
            "severity": "error",
            "human": "uri SHALL start with http:// or https://",
            "xpath": "starts-with(@value, 'http:') or starts-with(@value, 'https:')"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.valueSet"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loincstruc",
            "map": "CODE_TABLE"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping",
        "short": "Map element to another set of definitions",
        "definition": "Identifies a concept from an external specification that roughly corresponds to this element.",
        "comments": "Mappings are not necessarily specific enough for safe translation.",
        "requirements": "Provides guidance to implementers familiar with or converting content from other specifications.",
        "min": 0,
        "max": "*",
        "mapping": [
          {
            "identity": "dex",
            "map": "mappingSpecification"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.identity",
        "short": "Reference to mapping declaration",
        "definition": "An internal reference to the definition of a mapping.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.language",
        "short": "Computable language of mapping",
        "definition": "Identifies the computable language in which mapping.map is expressed.",
        "comments": "If omitted, then there can be no expectation of computational interpretation of the mapping.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "name": "MimeType",
          "strength": "required",
          "description": "The mime type of an attachment",
          "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.map",
        "short": "Details of the mapping",
        "definition": "Expresses what part of the target specification corresponds to this element.",
        "comments": "For most mappings, the syntax is undefined.  Syntax will be provided for mappings to the RIM.  Multiple mappings may be possible and may include constraints on other resource elements that identify when a particular mapping applies.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "ElementDefinition",
        "name": "dataelement",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "ElementDefinition"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        }
      },
      {
        "path": "ElementDefinition.extension",
        "name": "Question",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "AllowedUnits",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
          }
        ]
      },
      {
        "path": "ElementDefinition.path"
      },
      {
        "path": "ElementDefinition.representation",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.name"
      },
      {
        "path": "ElementDefinition.label"
      },
      {
        "path": "ElementDefinition.code"
      },
      {
        "path": "ElementDefinition.slicing",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.discriminator",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.description",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.ordered",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.rules",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.short",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.definition"
      },
      {
        "path": "ElementDefinition.comments"
      },
      {
        "path": "ElementDefinition.requirements"
      },
      {
        "path": "ElementDefinition.alias"
      },
      {
        "path": "ElementDefinition.min"
      },
      {
        "path": "ElementDefinition.max"
      },
      {
        "path": "ElementDefinition.type"
      },
      {
        "path": "ElementDefinition.type.code"
      },
      {
        "path": "ElementDefinition.type.profile",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.type.aggregation",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.nameReference",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.defaultValue[x]",
        "comments": "...\n\nThis element should only be used on child elements of complex data elements."
      },
      {
        "path": "ElementDefinition.meaningWhenMissing",
        "comments": "...\n\nThis element should only be used on child elements of complex data elements."
      },
      {
        "path": "ElementDefinition.fixed[x]",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.pattern[x]",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.example[x]"
      },
      {
        "path": "ElementDefinition.maxLength"
      },
      {
        "path": "ElementDefinition.condition"
      },
      {
        "path": "ElementDefinition.constraint"
      },
      {
        "path": "ElementDefinition.constraint.key"
      },
      {
        "path": "ElementDefinition.constraint.name"
      },
      {
        "path": "ElementDefinition.constraint.severity"
      },
      {
        "path": "ElementDefinition.constraint.human"
      },
      {
        "path": "ElementDefinition.constraint.xpath"
      },
      {
        "path": "ElementDefinition.mustSupport"
      },
      {
        "path": "ElementDefinition.isModifier",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.isSummary",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.binding"
      },
      {
        "path": "ElementDefinition.binding.name"
      },
      {
        "path": "ElementDefinition.binding.strength"
      },
      {
        "path": "ElementDefinition.binding.description"
      },
      {
        "path": "ElementDefinition.binding.valueSet[x]"
      },
      {
        "path": "ElementDefinition.mapping"
      },
      {
        "path": "ElementDefinition.mapping.identity"
      },
      {
        "path": "ElementDefinition.mapping.language"
      },
      {
        "path": "ElementDefinition.mapping.map"
      }
    ]
  }
}